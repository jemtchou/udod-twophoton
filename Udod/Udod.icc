#include "UdodConstants.h"


long double Gfunct(long double x,long double y,long double z,long double u,long  double v,long double w)
{
   long double gfunct = (-2*u*v*w + 2*v*v*w + 2*v*w*w + 2*u*v*x - 2*v*w*x + 2*u*w*y - 2*v*w*y - 2*u*x*y - 2*v*x*y - 2*w*x*y + 2*x*x*y + 2*x*y*y + 2*u*u*z - 2*u*v*z - 2*u*w*z - 2*v*w*z - 2*u*x*z + 2*w*x*z - 2*u*y*z + 2*v*y*z - 2*x*y*z + 2*u*z*z)/2;

   return gfunct;
}

long double coefG1(long double s, long double s1, long double t1, long double s2, long double t2)
{
   return me2*me2*me2 - 2*me2*me2*s2 + me2*s2*s2 - 3*me2*s*t1 + (s*s - s*s2)*t1 + s*t1*t1;
}

// same as coefG1, but t1->t2, s1->s2
/*long double coefG1interchanged()
{
  return me2*me2*me2 - 2*me2*me2*s1 + me2*Sq(s1) - 3*me2*s*t2 + (Sq(s) - s*s1)*t2 + s*Sq(t2);
  }*/

long double coefG2(long double mX2, long double s1, long double t1, long double s2, long double t2)
{
   return me2*mX2*mX2 - 2*me2*mX2*t1 + me2*me2*t2 + me2*(-mX2 - 2*s2)*t2 + (-(mX2*s2) + s2*s2)*t2 + (mX2 - s2)*t1*t2 + s2*t2*t2 + t1*(me2*t1 - me2*t2);
}

long double coefGphi1(long double mX2, long double s, long double s1, long double t1, long double s2, long double t2)
{
   return 2*me2*me2*me2 + (mX2*s*s)/2 + me2*me2*(-s/2 - s1 - 3*s2) - (s*s1*s2)/2 + me2*(-2*mX2*s + (s*s1)/2 + (s*s2)/2 + s1*s2 + s2*s2) - (3*me2*s*t1)/2 + (s*(s + s1 - 2*s2)*t1)/2 + s*t1*(t1 - t2) + (3*me2*s*t2)/2 + (s*(-s + s2)*t2)/2;
}

/* same as coefGphi1, t1->t2, s1->s2
long double coefGphi2(long double mX2, long double s, long double s1, long double t1, long double s2, long double t2)
{
  return 2*me2*me2*me2 + (mX2*s*s)/2 + me2*me2*(-s/2 - 3*s1 - s2) - (s*s1*s2)/2 + me2*(-2*mX2*s + (s*s1)/2 + s1*s1 + (s*s2)/2 + s1*s2) + (3*me2*s*t1)/2 + (s*(-s + s1)*t1)/2 - (3*me2*s*t2)/2 + (s*(s - 2*s1 + s2)*t2)/2 - s*(t1 - t2)*t2;
}
*/

long double coefGX(long double mX2, long double s, long double s1, long double t1, long double s2, long double t2)
{
   return 4*me2*me2*me2 - me2*me2*(s + 4*(s1 + s2)) + me2*(-4*mX2*s + (s1 + s2)*(s + s1 + s2)) + s*(mX2*s - (s1 + t1 - t2)*(s2 - t1 + t2));
}

long double coefP(long double t1, long double s2)
{
   return me2*me2 - 2*me2*s2 + s2*s2 - 2*me2*t1 - 2*s2*t1 + t1*t1;
}

long double coefQ(long double mX2, long double s, long double s1, long double t1, long double s2, long double t2)
{
   return -me2*me2*me2 - mX2*s*s2 + me2*me2*(-2*mX2 + 2*s2) + me2*(mX2*s + 2*mX2*s2 - s2*s2) + 4*me2*me2*t1 - me2*s*t1 + (mX2*s + s*s2)*t1 + me2*me2*t2 - me2*s*t2 + (s*s2 - s2*s2)*t2 + t1*(-(me2*t1) - me2*t2) + t1*(-(s*t1) + (s + s2)*t2);
}

long double coefR(long double mX2, long double s, long double s1, long double t1, long double s2, long double t2)
{
   return me2*me2*me2*me2 + 4*me2*me2*me2*mX2 - 2*me2*me2*mX2*s - 4*me2*mX2*mX2*s + mX2*mX2*s*s - 2*me2*me2*me2*s2 - 4*me2*me2*mX2*s2 + 2*me2*mX2*s*s2 + me2*me2*s2*s2 - 6*me2*me2*me2*t1 + 2*me2*me2*s*t1 + 6*me2*mX2*s*t1 - 2*mX2*s*s*t1 + 2*me2*me2*s2*t1 - 2*me2*s*s2*t1 + me2*me2*t1*t1 - 2*me2*s*t1*t1 + s*s*t1*t1 - 6*me2*me2*me2*t2 + 2*me2*me2*s*t2 + 6*me2*mX2*s*t2 - 2*mX2*s*s*t2 + 8*me2*me2*s2*t2 - 2*me2*s*s2*t2 + 2*mX2*s*s2*t2 - 2*me2*s2*s2*t2 + 2*me2*me2*t1*t2 + 4*me2*s*t1*t2 - 4*mX2*s*t1*t2 - 2*s*s*t1*t2 - 2*me2*s2*t1*t2 + 2*s*s2*t1*t2 + me2*me2*t2*t2 - 2*me2*s*t2*t2 + s*s*t2*t2 - 2*me2*s2*t2*t2 - 2*s*s2*t2*t2 + s2*s2*t2*t2;
}

//(-2*u*v*w + 2*v*v*w + 2*v*w*w + 2*u*v*x - 2*v*w*x + 2*u*w*y - 2*v*w*y - 2*u*x*y - 2*v*x*y - 2*w*x*y + 2*x*x*y + 2*x*y*y + 2*u*u*z - 2*u*v*z - 2*u*w*z - 2*v*w*z - 2*u*x*z + 2*w*x*z - 2*u*y*z + 2*v*y*z - 2*x*y*z + 2*u*z*z)/2;

long double mBfunct(long double mX2, long double s, long double s1, long double t1, long double s2, long double t2)
{
   return me2*me2*me2*me2 + 2*me2*me2*me2*(2*mX2 - s1 - s2) + 2*me2*(-2*mX2 + s1 + s2)*(mX2*s - s1*s2) + (mX2*s - s1*s2)*(mX2*s - s1*s2) + me2*me2*(-4*mX2*mX2 + (-2*mX2 + s1 + s2)*(-2*mX2 + s1 + s2) - 2*(mX2*s - s1*s2)) - 6*me2*me2*me2*t1 + me2*me2*(2*s + 8*s1 + 2*s2)*t1 + me2*(6*mX2*s - 2*s*s1 - 2*s1*s1 - 2*s*s2)*t1 + 2*(-s + s1)*(mX2*s - s1*s2)*t1 - 6*me2*me2*me2*t2 + me2*me2*(2*s + 2*s1 + 8*s2)*t2 + 2*(-s + s2)*(mX2*s - s1*s2)*t2 + me2*(6*mX2*s - 2*s*s1 - 2*s*s2 - 2*s2*s2)*t2 + me2*me2*t2*t2 + (s - s2)*(s - s2)*t2*t2 - 2*me2*(s + s2)*t2*t2 + me2*me2*t1*(t1 + 2*t2) + 2*me2*t1*((-s - s1)*t1 + (2*s - s1 - s2)*t2) + t1*((s - s1)*(s - s1)*t1 + (-4*mX2*s - 2*s*s + 2*s*s1 + 2*s*s2 + 2*s1*s2)*t2);
}
